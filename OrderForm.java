package orderForm;



import BillingForm.BillingForm;
import LogIn.LoginForm;
import PharmacistLogin.PhamacistLogin;
import ProductForm.ProductForm;
import java.awt.HeadlessException;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;


/**
 *
 * @author Asus
 */
public final class OrderForm extends javax.swing.JFrame {
    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pat = null;
    /**
     * Creates new form OrderForm
     */
    public OrderForm() {      
            initComponents();
            setSize(1920,1080);
            setLocation(0,0);
            setResizable(false); 
             navi_panel.setVisible(false);
        gohome_btn.setVisible(false);
        closenavi_btn.setVisible(false);
        goproduct_btn.setVisible(false);
        goorder_btn.setVisible(false);
        gobilling_btn.setVisible(false);
        signout_btn.setVisible(false);
            loadcombo();
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost/happysmile","root","");
            String sql1 ="SELECT op.oid,op.pid,op.quantity,o.supplier,o.date,o.total,o.status,p.name,p.category,p.amount FROM order_product op Left Outer Join phorder o ON op.oid = o.oid Left Outer Join product p ON op.pid = p.pid Group By op.oid";
            pat = con.prepareStatement(sql1);
            rs=pat.executeQuery();
            order_table.setModel(DbUtils.resultSetToTableModel(rs));
            int no = order_table.getRowCount();
            no = no+1;
            oid_txt.setText("" + no);
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label3 = new java.awt.Label();
        view_btn = new javax.swing.JButton();
        allorder_btn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        view_area = new javax.swing.JTextArea();
        clearprod_btn = new javax.swing.JButton();
        print_btn = new javax.swing.JButton();
        addprod_btn = new javax.swing.JButton();
        search_btn = new javax.swing.JButton();
        saerch_oid_btn = new javax.swing.JButton();
        pending_btn = new javax.swing.JButton();
        search_oid_txt = new javax.swing.JTextField();
        navi_panel = new javax.swing.JPanel();
        gohome_btn = new javax.swing.JButton();
        closenavi_btn = new javax.swing.JButton();
        goproduct_btn = new javax.swing.JButton();
        goorder_btn = new javax.swing.JButton();
        gobilling_btn = new javax.swing.JButton();
        signout_btn = new javax.swing.JButton();
        supplier = new javax.swing.JComboBox<String>();
        label5 = new java.awt.Label();
        jScrollPane4 = new javax.swing.JScrollPane();
        order_table = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        label8 = new java.awt.Label();
        label9 = new java.awt.Label();
        label10 = new java.awt.Label();
        quantity_spinner = new javax.swing.JSpinner();
        reset_btn = new javax.swing.JButton();
        addorder_btn = new javax.swing.JButton();
        label7 = new java.awt.Label();
        label20 = new java.awt.Label();
        orderDateChooser = new com.toedter.calendar.JDateChooser();
        jScrollPane6 = new javax.swing.JScrollPane();
        product_table = new javax.swing.JTable();
        oid_txt = new javax.swing.JTextField();
        label13 = new java.awt.Label();
        jScrollPane7 = new javax.swing.JScrollPane();
        upproduct_table = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        makeorder_table = new javax.swing.JTable();
        total_txt = new javax.swing.JTextField();
        opennavi_btn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        searchpro_txt = new javax.swing.JTextField();
        label12 = new java.awt.Label();
        label14 = new java.awt.Label();
        label15 = new java.awt.Label();
        label16 = new java.awt.Label();
        label17 = new java.awt.Label();
        uptotal_txt = new javax.swing.JTextField();
        label18 = new java.awt.Label();
        status_combo = new javax.swing.JComboBox<String>();
        update1_btn = new javax.swing.JButton();
        label19 = new java.awt.Label();
        cancelupdate_btn = new javax.swing.JButton();
        uporderDateChooser = new com.toedter.calendar.JDateChooser();
        del_pro_btn = new javax.swing.JButton();
        add_pro_btn = new javax.swing.JButton();
        label21 = new java.awt.Label();
        supplier1_combo = new javax.swing.JComboBox<String>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSpinner8 = new javax.swing.JSpinner();
        label6 = new java.awt.Label();
        update_btn = new javax.swing.JButton();
        delete_btn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 102, 0));

        label3.setAlignment(java.awt.Label.CENTER);
        label3.setBackground(new java.awt.Color(0, 102, 0));
        label3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label3.setFont(new java.awt.Font("Baskerville Old Face", 1, 48)); // NOI18N
        label3.setForeground(new java.awt.Color(255, 255, 255));
        label3.setText("HAPPY SMILE DENTAL CLINIC");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 943, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(886, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1920, 70);

        view_btn.setBackground(new java.awt.Color(51, 102, 0));
        view_btn.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        view_btn.setForeground(new java.awt.Color(204, 255, 204));
        view_btn.setText("VIEW");
        view_btn.setBorder(null);
        view_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_btnActionPerformed(evt);
            }
        });
        getContentPane().add(view_btn);
        view_btn.setBounds(1710, 310, 190, 40);

        allorder_btn.setBackground(new java.awt.Color(51, 102, 0));
        allorder_btn.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        allorder_btn.setForeground(new java.awt.Color(204, 255, 204));
        allorder_btn.setText("VIEW ALL ODERS");
        allorder_btn.setBorder(null);
        allorder_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allorder_btnActionPerformed(evt);
            }
        });
        getContentPane().add(allorder_btn);
        allorder_btn.setBounds(1710, 190, 190, 40);

        view_area.setColumns(20);
        view_area.setRows(5);
        jScrollPane2.setViewportView(view_area);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(740, 590, 530, 380);

        clearprod_btn.setBackground(new java.awt.Color(51, 102, 0));
        clearprod_btn.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        clearprod_btn.setForeground(new java.awt.Color(204, 255, 204));
        clearprod_btn.setText("CLEAR");
        clearprod_btn.setBorder(null);
        clearprod_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearprod_btnActionPerformed(evt);
            }
        });
        getContentPane().add(clearprod_btn);
        clearprod_btn.setBounds(360, 990, 160, 40);

        print_btn.setBackground(new java.awt.Color(51, 102, 0));
        print_btn.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        print_btn.setForeground(new java.awt.Color(204, 255, 204));
        print_btn.setText("GENERATE REPORT");
        print_btn.setBorder(null);
        print_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                print_btnActionPerformed(evt);
            }
        });
        getContentPane().add(print_btn);
        print_btn.setBounds(740, 990, 170, 40);

        addprod_btn.setBackground(new java.awt.Color(51, 102, 0));
        addprod_btn.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        addprod_btn.setForeground(new java.awt.Color(204, 255, 204));
        addprod_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ad2.png"))); // NOI18N
        addprod_btn.setText("ADD");
        addprod_btn.setBorder(null);
        addprod_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addprod_btnActionPerformed(evt);
            }
        });
        getContentPane().add(addprod_btn);
        addprod_btn.setBounds(530, 990, 140, 40);

        search_btn.setBackground(new java.awt.Color(51, 102, 0));
        search_btn.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        search_btn.setForeground(new java.awt.Color(204, 255, 204));
        search_btn.setText("SEARCH");
        search_btn.setBorder(null);
        search_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_btnActionPerformed(evt);
            }
        });
        getContentPane().add(search_btn);
        search_btn.setBounds(560, 620, 110, 40);

        saerch_oid_btn.setBackground(new java.awt.Color(51, 102, 0));
        saerch_oid_btn.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        saerch_oid_btn.setForeground(new java.awt.Color(204, 255, 204));
        saerch_oid_btn.setText("SEARCH");
        saerch_oid_btn.setBorder(null);
        saerch_oid_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saerch_oid_btnActionPerformed(evt);
            }
        });
        getContentPane().add(saerch_oid_btn);
        saerch_oid_btn.setBounds(1530, 140, 140, 40);

        pending_btn.setBackground(new java.awt.Color(51, 102, 0));
        pending_btn.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        pending_btn.setForeground(new java.awt.Color(204, 255, 204));
        pending_btn.setText("VIEW PENDING ORDERS");
        pending_btn.setBorder(null);
        pending_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pending_btnActionPerformed(evt);
            }
        });
        getContentPane().add(pending_btn);
        pending_btn.setBounds(1710, 250, 190, 40);
        getContentPane().add(search_oid_txt);
        search_oid_txt.setBounds(780, 140, 740, 30);

        navi_panel.setBackground(new java.awt.Color(102, 153, 0));

        gohome_btn.setText("HOME");
        gohome_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gohome_btnActionPerformed(evt);
            }
        });

        closenavi_btn.setBackground(new java.awt.Color(204, 204, 204));
        closenavi_btn.setForeground(new java.awt.Color(0, 102, 51));
        closenavi_btn.setText("||||");
        closenavi_btn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 0), 1, true));
        closenavi_btn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        closenavi_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closenavi_btnActionPerformed(evt);
            }
        });

        goproduct_btn.setText("PRODUCTS ");
        goproduct_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goproduct_btnActionPerformed(evt);
            }
        });

        goorder_btn.setText("ORDERS");
        goorder_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goorder_btnActionPerformed(evt);
            }
        });

        gobilling_btn.setText("BILLING");
        gobilling_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gobilling_btnActionPerformed(evt);
            }
        });

        signout_btn.setText("SIGN OUT");
        signout_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signout_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout navi_panelLayout = new javax.swing.GroupLayout(navi_panel);
        navi_panel.setLayout(navi_panelLayout);
        navi_panelLayout.setHorizontalGroup(
            navi_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gohome_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(goproduct_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
            .addComponent(goorder_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(gobilling_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(signout_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(navi_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(closenavi_btn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        navi_panelLayout.setVerticalGroup(
            navi_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navi_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(closenavi_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(gohome_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(goproduct_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(goorder_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(gobilling_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(signout_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(670, Short.MAX_VALUE))
        );

        getContentPane().add(navi_panel);
        navi_panel.setBounds(0, 70, 280, 1010);

        supplier.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                supplierInputMethodTextChanged(evt);
            }
        });
        supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierActionPerformed(evt);
            }
        });
        getContentPane().add(supplier);
        supplier.setBounds(160, 370, 170, 20);

        label5.setAlignment(java.awt.Label.CENTER);
        label5.setBackground(new java.awt.Color(0, 102, 51));
        label5.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        label5.setForeground(new java.awt.Color(255, 255, 255));
        label5.setText("SEARCH ORDERS");
        getContentPane().add(label5);
        label5.setBounds(1100, 80, 300, 40);

        order_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(order_table);

        getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(770, 190, 920, 240);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bg3.jpg"))); // NOI18N
        jLabel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(51, 102, 0), new java.awt.Color(0, 51, 0), new java.awt.Color(102, 204, 0), new java.awt.Color(51, 153, 0)));
        getContentPane().add(jLabel8);
        jLabel8.setBounds(720, 70, 1200, 410);

        label8.setAlignment(java.awt.Label.CENTER);
        label8.setBackground(new java.awt.Color(0, 102, 0));
        label8.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        label8.setForeground(new java.awt.Color(255, 255, 255));
        label8.setText("Supplier");
        getContentPane().add(label8);
        label8.setBounds(20, 370, 130, 30);

        label9.setAlignment(java.awt.Label.CENTER);
        label9.setBackground(new java.awt.Color(0, 102, 0));
        label9.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        label9.setForeground(new java.awt.Color(255, 255, 255));
        label9.setText("Total");
        getContentPane().add(label9);
        label9.setBounds(350, 370, 130, 30);

        label10.setAlignment(java.awt.Label.CENTER);
        label10.setBackground(new java.awt.Color(0, 102, 0));
        label10.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        label10.setForeground(new java.awt.Color(255, 255, 255));
        label10.setText("Order Date");
        getContentPane().add(label10);
        label10.setBounds(20, 410, 130, 30);

        quantity_spinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), null, null, Integer.valueOf(1)));
        getContentPane().add(quantity_spinner);
        quantity_spinner.setBounds(200, 890, 120, 30);

        reset_btn.setBackground(new java.awt.Color(51, 102, 0));
        reset_btn.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        reset_btn.setForeground(new java.awt.Color(204, 255, 204));
        reset_btn.setText("RESET");
        reset_btn.setBorder(null);
        reset_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_btnActionPerformed(evt);
            }
        });
        getContentPane().add(reset_btn);
        reset_btn.setBounds(380, 430, 150, 40);

        addorder_btn.setBackground(new java.awt.Color(51, 102, 0));
        addorder_btn.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        addorder_btn.setForeground(new java.awt.Color(204, 255, 204));
        addorder_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ad2.png"))); // NOI18N
        addorder_btn.setText("ADD");
        addorder_btn.setBorder(null);
        addorder_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addorder_btnActionPerformed(evt);
            }
        });
        getContentPane().add(addorder_btn);
        addorder_btn.setBounds(540, 430, 150, 40);

        label7.setAlignment(java.awt.Label.CENTER);
        label7.setBackground(new java.awt.Color(0, 102, 51));
        label7.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        label7.setForeground(new java.awt.Color(255, 255, 255));
        label7.setText("MAKE NEW ORDER");
        getContentPane().add(label7);
        label7.setBounds(210, 90, 240, 40);

        label20.setAlignment(java.awt.Label.CENTER);
        label20.setBackground(new java.awt.Color(0, 102, 0));
        label20.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        label20.setForeground(new java.awt.Color(255, 255, 255));
        label20.setText("Products");
        getContentPane().add(label20);
        label20.setBounds(20, 210, 140, 30);
        getContentPane().add(orderDateChooser);
        orderDateChooser.setBounds(160, 410, 170, 30);

        product_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(product_table);

        getContentPane().add(jScrollPane6);
        jScrollPane6.setBounds(30, 680, 650, 190);

        oid_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oid_txtActionPerformed(evt);
            }
        });
        getContentPane().add(oid_txt);
        oid_txt.setBounds(180, 170, 160, 30);

        label13.setAlignment(java.awt.Label.CENTER);
        label13.setBackground(new java.awt.Color(0, 102, 0));
        label13.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        label13.setForeground(new java.awt.Color(255, 255, 255));
        label13.setText("Order id");
        getContentPane().add(label13);
        label13.setBounds(20, 170, 140, 30);

        upproduct_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Amount", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane7.setViewportView(upproduct_table);

        getContentPane().add(jScrollPane7);
        jScrollPane7.setBounds(1330, 600, 530, 130);

        makeorder_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Amount", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane8.setViewportView(makeorder_table);

        getContentPane().add(jScrollPane8);
        jScrollPane8.setBounds(20, 250, 660, 110);

        total_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total_txtActionPerformed(evt);
            }
        });
        total_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                total_txtKeyTyped(evt);
            }
        });
        getContentPane().add(total_txt);
        total_txt.setBounds(500, 370, 190, 30);

        opennavi_btn.setBackground(new java.awt.Color(0, 102, 0));
        opennavi_btn.setForeground(new java.awt.Color(0, 102, 51));
        opennavi_btn.setText("||||");
        opennavi_btn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 0), 1, true));
        opennavi_btn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        opennavi_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opennavi_btnActionPerformed(evt);
            }
        });
        getContentPane().add(opennavi_btn);
        opennavi_btn.setBounds(10, 80, 30, 30);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bg3.jpg"))); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(51, 102, 0), new java.awt.Color(0, 51, 0), new java.awt.Color(51, 204, 0), new java.awt.Color(51, 153, 0)));
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 70, 720, 410);

        searchpro_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchpro_txtActionPerformed(evt);
            }
        });
        getContentPane().add(searchpro_txt);
        searchpro_txt.setBounds(40, 620, 500, 30);

        label12.setAlignment(java.awt.Label.CENTER);
        label12.setBackground(new java.awt.Color(0, 102, 51));
        label12.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        label12.setForeground(new java.awt.Color(255, 255, 255));
        label12.setText("ADD PRODUCT FOR ORDER");
        getContentPane().add(label12);
        label12.setBounds(200, 510, 290, 50);

        label14.setAlignment(java.awt.Label.CENTER);
        label14.setBackground(new java.awt.Color(0, 102, 0));
        label14.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        label14.setForeground(new java.awt.Color(255, 255, 255));
        label14.setText("Quantity");
        getContentPane().add(label14);
        label14.setBounds(40, 890, 150, 30);

        label15.setAlignment(java.awt.Label.CENTER);
        label15.setBackground(new java.awt.Color(0, 102, 0));
        label15.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        label15.setForeground(new java.awt.Color(255, 255, 255));
        label15.setText("PRODUCTS");
        getContentPane().add(label15);
        label15.setBounds(1380, 560, 150, 30);

        label16.setAlignment(java.awt.Label.CENTER);
        label16.setBackground(new java.awt.Color(0, 102, 0));
        label16.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        label16.setForeground(new java.awt.Color(255, 255, 255));
        label16.setText("Supplier");
        getContentPane().add(label16);
        label16.setBounds(1380, 760, 150, 30);

        label17.setAlignment(java.awt.Label.CENTER);
        label17.setBackground(new java.awt.Color(0, 102, 0));
        label17.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        label17.setForeground(new java.awt.Color(255, 255, 255));
        label17.setText("Status");
        getContentPane().add(label17);
        label17.setBounds(1380, 910, 150, 30);

        uptotal_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uptotal_txtActionPerformed(evt);
            }
        });
        uptotal_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uptotal_txtKeyTyped(evt);
            }
        });
        getContentPane().add(uptotal_txt);
        uptotal_txt.setBounds(1570, 810, 230, 30);

        label18.setAlignment(java.awt.Label.CENTER);
        label18.setBackground(new java.awt.Color(0, 102, 0));
        label18.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        label18.setForeground(new java.awt.Color(255, 255, 255));
        label18.setText("Total");
        getContentPane().add(label18);
        label18.setBounds(1380, 810, 150, 30);

        status_combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "pending", "delievered", "canceled" }));
        getContentPane().add(status_combo);
        status_combo.setBounds(1570, 910, 230, 30);

        update1_btn.setBackground(new java.awt.Color(51, 102, 0));
        update1_btn.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        update1_btn.setForeground(new java.awt.Color(204, 255, 204));
        update1_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/update.png"))); // NOI18N
        update1_btn.setText("UPDATE");
        update1_btn.setBorder(null);
        update1_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update1_btnActionPerformed(evt);
            }
        });
        getContentPane().add(update1_btn);
        update1_btn.setBounds(1740, 990, 130, 40);

        label19.setAlignment(java.awt.Label.CENTER);
        label19.setBackground(new java.awt.Color(0, 102, 51));
        label19.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        label19.setForeground(new java.awt.Color(255, 255, 255));
        label19.setText("UPDATE ORDER DETAILS");
        getContentPane().add(label19);
        label19.setBounds(1480, 500, 320, 40);

        cancelupdate_btn.setBackground(new java.awt.Color(51, 102, 0));
        cancelupdate_btn.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        cancelupdate_btn.setForeground(new java.awt.Color(204, 255, 204));
        cancelupdate_btn.setText("CANCEL");
        cancelupdate_btn.setBorder(null);
        cancelupdate_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelupdate_btnActionPerformed(evt);
            }
        });
        getContentPane().add(cancelupdate_btn);
        cancelupdate_btn.setBounds(1580, 990, 140, 40);
        getContentPane().add(uporderDateChooser);
        uporderDateChooser.setBounds(1570, 860, 230, 30);

        del_pro_btn.setBackground(new java.awt.Color(51, 102, 0));
        del_pro_btn.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        del_pro_btn.setForeground(new java.awt.Color(204, 255, 204));
        del_pro_btn.setText("-");
        del_pro_btn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        del_pro_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                del_pro_btnActionPerformed(evt);
            }
        });
        getContentPane().add(del_pro_btn);
        del_pro_btn.setBounds(1870, 640, 30, 30);

        add_pro_btn.setBackground(new java.awt.Color(51, 102, 0));
        add_pro_btn.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        add_pro_btn.setForeground(new java.awt.Color(204, 255, 204));
        add_pro_btn.setText("+");
        add_pro_btn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add_pro_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_pro_btnActionPerformed(evt);
            }
        });
        getContentPane().add(add_pro_btn);
        add_pro_btn.setBounds(1870, 690, 30, 30);

        label21.setAlignment(java.awt.Label.CENTER);
        label21.setBackground(new java.awt.Color(0, 102, 0));
        label21.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        label21.setForeground(new java.awt.Color(255, 255, 255));
        label21.setText("Order Date");
        getContentPane().add(label21);
        label21.setBounds(1380, 860, 150, 30);

        supplier1_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplier1_comboActionPerformed(evt);
            }
        });
        getContentPane().add(supplier1_combo);
        supplier1_combo.setBounds(1570, 760, 230, 30);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bg3.jpg"))); // NOI18N
        jLabel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(51, 102, 0), new java.awt.Color(0, 51, 0), new java.awt.Color(51, 204, 0), new java.awt.Color(51, 153, 0)));
        getContentPane().add(jLabel4);
        jLabel4.setBounds(1290, 480, 630, 600);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bg3.jpg"))); // NOI18N
        jLabel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(51, 102, 0), new java.awt.Color(0, 51, 0), new java.awt.Color(51, 204, 0), new java.awt.Color(51, 153, 0)));
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 480, 720, 600);
        getContentPane().add(jSpinner8);
        jSpinner8.setBounds(160, 670, 40, 22);

        label6.setAlignment(java.awt.Label.CENTER);
        label6.setBackground(new java.awt.Color(0, 102, 51));
        label6.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        label6.setForeground(new java.awt.Color(255, 255, 255));
        label6.setText("VIEW ORDER DETAILS");
        getContentPane().add(label6);
        label6.setBounds(840, 500, 320, 50);

        update_btn.setBackground(new java.awt.Color(51, 102, 0));
        update_btn.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        update_btn.setForeground(new java.awt.Color(204, 255, 204));
        update_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/update.png"))); // NOI18N
        update_btn.setText("UPDATE");
        update_btn.setBorder(null);
        update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_btnActionPerformed(evt);
            }
        });
        getContentPane().add(update_btn);
        update_btn.setBounds(920, 990, 170, 40);

        delete_btn.setBackground(new java.awt.Color(51, 102, 0));
        delete_btn.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        delete_btn.setForeground(new java.awt.Color(204, 255, 204));
        delete_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete.png"))); // NOI18N
        delete_btn.setText("DELETE");
        delete_btn.setBorder(null);
        delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_btnActionPerformed(evt);
            }
        });
        getContentPane().add(delete_btn);
        delete_btn.setBounds(1100, 990, 170, 40);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bg3.jpg"))); // NOI18N
        jLabel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(51, 102, 0), new java.awt.Color(0, 51, 0), new java.awt.Color(51, 204, 0), new java.awt.Color(51, 153, 0)));
        getContentPane().add(jLabel6);
        jLabel6.setBounds(720, 480, 570, 600);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bg3.jpg"))); // NOI18N
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(jLabel7);
        jLabel7.setBounds(1370, 70, 550, 410);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bg3.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(650, 70, 70, 410);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bg3.jpg"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(650, 480, 70, 600);

        setSize(new java.awt.Dimension(1938, 1127));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void view_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_btnActionPerformed
            if(!order_table.getSelectionModel().isSelectionEmpty()){
        // TODO add your handling code here:
        try{
        int i = order_table.getSelectedRow();
        TableModel model = order_table.getModel();
        
        view_area.setText("*******************ORDER DETAILS**********************\n");
        view_area.setText(view_area.getText()+"Order ID : " + model.getValueAt(i, 0).toString()+"\n");
        view_area.setText(view_area.getText()+"Supplier : " + model.getValueAt(i, 3).toString()+"\n");
        view_area.setText(view_area.getText()+"Date : " + model.getValueAt(i, 4).toString()+"\n");
        view_area.setText(view_area.getText()+"Status : " + model.getValueAt(i, 6).toString()+"\n");
        view_area.setText(view_area.getText()+"Total : " + model.getValueAt(i, 5).toString()+"\n\n"); 
        
       con = DriverManager.getConnection("jdbc:mysql://localhost/happysmile","root","");
       String sql1 ="SELECT op.oid,op.pid,op.quantity,o.supplier,o.date,o.total,o.status,p.name,p.category,p.amount FROM order_product op Left Outer Join phorder o ON op.oid = o.oid Left Outer Join product p ON op.pid = p.pid WHERE op.oid = ?";
       pat = con.prepareStatement(sql1);
       pat.setString(1, order_table.getValueAt(i, 0).toString());
       rs=pat.executeQuery();
       order_table.setModel(DbUtils.resultSetToTableModel(rs));
         
         TableModel m2 = order_table.getModel();
        for(int x=0;x<=m2.getRowCount();x++){
        view_area.setText(view_area.getText()+"Product id : " + m2.getValueAt(x, 1).toString()+"\n");
        view_area.setText(view_area.getText()+"Quantity : "  + m2.getValueAt(x, 2).toString()+"\n");
        view_area.setText(view_area.getText()+"Name : " + m2.getValueAt(x, 7).toString()+"\n");
        view_area.setText(view_area.getText()+"Category : " + m2.getValueAt(x, 8).toString()+"\n");
        view_area.setText(view_area.getText()+"Amount : " + m2.getValueAt(x, 9).toString()+"\n\n");
        }        

        }catch(SQLException ex){
            
        }
        }
        else
             JOptionPane.showMessageDialog(null, "NOTHING SPECIFIED TO VIEW");
    }//GEN-LAST:event_view_btnActionPerformed

    private void allorder_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allorder_btnActionPerformed
        // TODO add your handling code here
         try{
            con = DriverManager.getConnection("jdbc:mysql://localhost/happysmile","root","");
            String sql1 ="SELECT op.oid,op.pid,op.quantity,o.supplier,o.date,o.total,o.status,p.name,p.category,p.amount FROM order_product op Left Outer Join phorder o ON op.oid = o.oid Left Outer Join product p ON op.pid = p.pid Group By op.oid";
            pat = con.prepareStatement(sql1);
            rs=pat.executeQuery();
            order_table.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_allorder_btnActionPerformed

    private void pending_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pending_btnActionPerformed
        // TODO add your handling code here:
           try{
            con = DriverManager.getConnection("jdbc:mysql://localhost/happysmile","root","");
            String sql2 = "SELECT op.oid,op.pid,op.quantity,o.supplier,o.date,o.total,o.status,p.name,p.category,p.amount FROM order_product op Left Outer Join phorder o ON op.oid = o.oid Left Outer Join product p ON op.pid = p.pid WHERE o.status = ? Group By op.oid";
            pat = con.prepareStatement(sql2);
            pat.setString(1, "pending");
           // pat.setString(1,"pending");
            rs=pat.executeQuery();
            order_table.setModel(DbUtils.resultSetToTableModel(rs));
                if(order_table.getModel().getRowCount()<=0)
                    JOptionPane.showMessageDialog(null,"There is no any pending orders.");
                }
                 catch(HeadlessException | SQLException ex){
                     JOptionPane.showMessageDialog(null, ex);
                 }
    }//GEN-LAST:event_pending_btnActionPerformed

    private void reset_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_btnActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) makeorder_table.getModel();
        model.setRowCount(0);
       java.util.Date date = null;
         orderDateChooser.setDate(date);
        total_txt.setText(null);
    }//GEN-LAST:event_reset_btnActionPerformed

    
    public static java.sql.Date convertUtilDateToSqlDate(java.util.Date date){
        if(date!=null){
            java.sql.Date sqlDate = new java.sql.Date(date.getTime());
            return sqlDate;
        }
        return null;
    }
        
        
    private void addorder_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addorder_btnActionPerformed
        // TODO add your handling code here:
         Calendar cur = Calendar.getInstance();
         Date sqldate = new Date((cur.getTime()).getTime());
      if(makeorder_table.getRowCount()==0)
          JOptionPane.showMessageDialog(null,"ADD PRODUCTS FOR ORDER"); 
      else if(total_txt.getText()==null || orderDateChooser.getDate() == null)
          JOptionPane.showMessageDialog(null,"MAKE SURE YOU FILLED ALL FIELDS"); 
      else if(!sqldate.after(orderDateChooser.getDate())){
          JOptionPane.showMessageDialog(null,"MANUFACTURE DATE CANNOT BE A FUTURE VALUE");
      }
      else{
        try{
           String sql = "INSERT INTO phorder" + "(oid,supplier,total,date,status)" + "VALUES (?,?,?,?,?)";
           con = DriverManager.getConnection("jdbc:mysql://localhost/happysmile","root","");
           pat = con.prepareStatement(sql);
           pat.setString(1,oid_txt.getText());
           pat.setString(2, (String) supplier.getSelectedItem());
           pat.setString(3,total_txt.getText());
           pat.setDate(4,convertUtilDateToSqlDate(orderDateChooser.getDate())); 
           pat.setString(5,"pending");
           pat.executeUpdate();
           
           String sql1 = "INSERT INTO order_product" + "(oid,pid,quantity)" + "VALUES (?,?,?)";
           for(int i=0; i<makeorder_table.getRowCount();i++){
           con = DriverManager.getConnection("jdbc:mysql://localhost/happysmile","root","");
           pat = con.prepareStatement(sql1);
           pat.setString(1,oid_txt.getText());
           pat.setString(2,makeorder_table.getValueAt(i,0).toString());
           pat.setString(3,makeorder_table.getValueAt(i,3).toString());
           pat.executeUpdate();
           }
           
        JOptionPane.showMessageDialog(null,"ORDER ADDED SUCCESSFULLY");                    
        DefaultTableModel model = (DefaultTableModel) makeorder_table.getModel();
        model.setRowCount(0);
        java.util.Date date = null;
        orderDateChooser.setDate(date);
        total_txt.setText(null);
        
        con = DriverManager.getConnection("jdbc:mysql://localhost/happysmile","root","");
        String sql3 ="SELECT op.oid,op.pid,op.quantity,o.supplier,o.date,o.total,o.status,p.name,p.category,p.amount FROM order_product op Left Outer Join phorder o ON op.oid = o.oid Left Outer Join product p ON op.pid = p.pid Group By op.oid";
        pat = con.prepareStatement(sql3);
            rs=pat.executeQuery();
            order_table.setModel(DbUtils.resultSetToTableModel(rs));
        
            int no = order_table.getRowCount();
            no = no+1;
            oid_txt.setText("" + no);
       }
       catch(UnsupportedOperationException | SQLException ex){
           JOptionPane.showMessageDialog(null,ex);
       }
      }
    }//GEN-LAST:event_addorder_btnActionPerformed

    private void search_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_btnActionPerformed
        // TODO add your handling code here:
          try{
            con = DriverManager.getConnection("jdbc:mysql://localhost/happysmile","root","");
            String sql2 = "SELECT * FROM product WHERE name LIKE '"+searchpro_txt.getText()+"%'";
            pat = con.prepareStatement(sql2);
            rs=pat.executeQuery();
            product_table.setModel(DbUtils.resultSetToTableModel(rs));
            searchpro_txt.setText(null);
             if(product_table.getModel().getRowCount()<=0)
                    JOptionPane.showMessageDialog(null,"The Name you have entered is NOT available");
            searchpro_txt.setText(null);
             }
                 catch(HeadlessException | SQLException ex){
                     JOptionPane.showMessageDialog(null, ex);
                 }
    }//GEN-LAST:event_search_btnActionPerformed

    private void saerch_oid_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saerch_oid_btnActionPerformed
        // TODO add your handling code here:
     if(!search_oid_txt.getText().isEmpty()){
                try{
            con = DriverManager.getConnection("jdbc:mysql://localhost/happysmile","root","");
            String sql2 = "SELECT op.oid,op.pid,op.quantity,o.supplier,o.date,o.total,o.status,p.name,p.category,p.amount FROM order_product op Left Outer Join phorder o ON op.oid = o.oid Left Outer Join product p ON op.pid = p.pid WHERE op.oid = ? Group By op.oid";
            pat = con.prepareStatement(sql2);
            pat.setString(1,search_oid_txt.getText());
            rs=pat.executeQuery();
            order_table.setModel(DbUtils.resultSetToTableModel(rs));
            search_oid_txt.setText(null);
                if(order_table.getModel().getRowCount()<=0)
                    JOptionPane.showMessageDialog(null,"The Id you have entered is NOT available");
                }
                 catch(HeadlessException | SQLException ex){
                     JOptionPane.showMessageDialog(null, ex);
                 }
           }
      else
         JOptionPane.showMessageDialog(null,"PLEASE SPECIFY THE ID TO SEARCH");
    }//GEN-LAST:event_saerch_oid_btnActionPerformed

    private void print_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_print_btnActionPerformed
        // TODO add your handling code here:
          if(!view_area.getText().isEmpty()){
        try {
            Boolean printdata = view_area.print();
            
            if(printdata)
                JOptionPane.showMessageDialog(null,"Done Printing.");
        } catch (PrinterException ex) {
            Logger.getLogger(ProductForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else
            JOptionPane.showMessageDialog(null,"NOTHING SPECIFIED TO PRINT.");
    }//GEN-LAST:event_print_btnActionPerformed
  
    private void clearprod_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearprod_btnActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_clearprod_btnActionPerformed

    public void clear(){
        DefaultTableModel model = (DefaultTableModel) product_table.getModel();
        model.setRowCount(0);
        quantity_spinner.setValue(1);
    }
    private void update1_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update1_btnActionPerformed
                 Calendar cur = Calendar.getInstance();
                 Date sqldate = new Date((cur.getTime()).getTime());
        if(upproduct_table.getRowCount()==0)
          JOptionPane.showMessageDialog(null,"ADD PRODUCTS FOR ORDER"); 
      else if(uptotal_txt.getText()==null || uporderDateChooser.getDate() == null)
          JOptionPane.showMessageDialog(null,"MAKE SURE YOU FILLED ALL FIELDS"); 
      else if(!sqldate.after(uporderDateChooser.getDate())){
          JOptionPane.showMessageDialog(null,"MANUFACTURE DATE CANNOT BE A FUTURE VALUE");
      }
      else{
        int op = JOptionPane.showConfirmDialog(null, "ARE YOU SURE YOU WANT TO UPDATE THIS RECORD?", "UPDATE", JOptionPane.YES_NO_OPTION);
        if(op==0){
        try{      
             TableModel m1 = order_table.getModel();
            int x = product_table.getSelectedRow();
           String sq4 = "UPDATE phorder SET supplier=?, total=?, date=?, status=? WHERE oid=?";
           con = DriverManager.getConnection("jdbc:mysql://localhost/happysmile","root","");
           pat = con.prepareStatement(sq4);
           pat.setString(1, (String) supplier1_combo.getSelectedItem());
           pat.setString(2,uptotal_txt.getText());
           pat.setDate(3,convertUtilDateToSqlDate(uporderDateChooser.getDate()));
           pat.setString(4, (String) status_combo.getSelectedItem());
           pat.setString(5,m1.getValueAt(0, 0).toString());
           pat.executeUpdate();
           JOptionPane.showMessageDialog(null,"ORDER UPDATED SUCCESSFULLY");
           clear2();
       }
       catch(UnsupportedOperationException | SQLException ex){
           JOptionPane.showMessageDialog(null,ex);
       }        // TODO add your handling code here:
       } 
      }
    }//GEN-LAST:event_update1_btnActionPerformed

    public void total1(){
         float tot = 0;
         for(int i=0; i<upproduct_table.getRowCount();i++){
           float amount = Float.parseFloat((String)upproduct_table.getValueAt(i, 2)) * Integer.parseInt((String)upproduct_table.getValueAt(i, 3));
           tot += amount;
         }
         uptotal_txt.setText(Float.toString(tot));
    }
    
    public void total(){
         float tot = 0;
         for(int i=0; i<makeorder_table.getRowCount();i++){
           float amount = Float.parseFloat((String)makeorder_table.getValueAt(i, 2)) * Integer.parseInt((String)makeorder_table.getValueAt(i, 3));
           tot += amount;
         }
         total_txt.setText(Float.toString(tot));
    }
    
    private void addprod_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addprod_btnActionPerformed
        // TODO add your handling code here:
        if(!product_table.getSelectionModel().isSelectionEmpty()){
         try{
           int i =  product_table.getSelectedRow();
           TableModel model = product_table.getModel();
            
           String x = model.getValueAt(i,0).toString();
           String y = model.getValueAt(i,1).toString();
           String z = model.getValueAt(i,8).toString();
           String t = quantity_spinner.getValue().toString();
           
           String[] row = {x,y,z,t};
           
           DefaultTableModel mod1 = (DefaultTableModel) makeorder_table.getModel();
           mod1.addRow(row);
           clear();
           total();
       }
       catch(UnsupportedOperationException ex){
           JOptionPane.showMessageDialog(null,ex);
       }
        }
        else
            JOptionPane.showMessageDialog(null,"NO PRODUCTS ARE SELECTED.");
    }//GEN-LAST:event_addprod_btnActionPerformed

    private void cancelupdate_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelupdate_btnActionPerformed
        // TODO add your handling code here:
        clear2();
    }//GEN-LAST:event_cancelupdate_btnActionPerformed

    public void clear2(){
        DefaultTableModel model1= (DefaultTableModel) upproduct_table.getModel();
            model1.setRowCount(0);
         java.util.Date date = null;
         uporderDateChooser.setDate(date);
        uptotal_txt.setText(null);
    }
    
    private void delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_btnActionPerformed
        if(!view_area.getText().isEmpty()){
        // TODO add your handling code here:
       int op = JOptionPane.showConfirmDialog(null, "ARE YOU SURE YOU WANT TO DELETE?", "DELETE", JOptionPane.YES_NO_OPTION);
        if(op==0){
        try{
             TableModel model = order_table.getModel();
             con = DriverManager.getConnection("jdbc:mysql://localhost/happysmile","root","");
             String sql1 ="SELECT op.oid,op.pid,op.quantity,o.supplier,o.date,o.total,o.status,p.name,p.category,p.amount FROM order_product op Left Outer Join phorder o ON op.oid = o.oid Left Outer Join product p ON op.pid = p.pid WHERE op.oid = ? GROUP BY op.oid";
             pat = con.prepareStatement(sql1);
             pat.setString(1, model.getValueAt(0, 0).toString());
             rs=pat.executeQuery();
             order_table.setModel(DbUtils.resultSetToTableModel(rs));
             
          TableModel m1 = order_table.getModel();
        
            String sql3 = "DELETE FROM order_product WHERE oid = ?";
            pat = con.prepareStatement(sql3);
            pat.setString(1, m1.getValueAt(0, 0).toString());
            pat.executeUpdate();
            JOptionPane.showMessageDialog(null, "DELETED SUCCESSFULLY");
            
            DefaultTableModel model1= (DefaultTableModel) order_table.getModel();
            model1.setRowCount(0);
            view_area.setText(null);
        }
        catch(HeadlessException | SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        }
         }
        else
              JOptionPane.showMessageDialog(null, "NOTHING SPECIFIED TO DELETE");
    }//GEN-LAST:event_delete_btnActionPerformed

    private void update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_btnActionPerformed
        // TODO add your handling code here:
        
           if(!view_area.getText().isEmpty()){
               try {
                   TableModel model = order_table.getModel();
                   con = DriverManager.getConnection("jdbc:mysql://localhost/happysmile","root","");
                   String sql1 ="SELECT op.oid,op.pid,op.quantity,o.supplier,o.date,o.total,o.status,p.name,p.category,p.amount FROM order_product op Left Outer Join phorder o ON op.oid = o.oid Left Outer Join product p ON op.pid = p.pid WHERE op.oid = ? GROUP BY op.oid";
                   pat = con.prepareStatement(sql1);
                   pat.setString(1, model.getValueAt(0, 0).toString());
                   rs=pat.executeQuery();
                   order_table.setModel(DbUtils.resultSetToTableModel(rs));
                   
                   TableModel m2 = order_table.getModel();
                   
                   String sql2 ="SELECT p.pid,p.name,p.category,p.amount FROM order_product op Left Outer Join product p ON op.pid = p.pid WHERE op.oid = ?";
                   pat = con.prepareStatement(sql2);
                   pat.setString(1, m2.getValueAt(0, 0).toString());
                   rs=pat.executeQuery();                  
                   upproduct_table.setModel(DbUtils.resultSetToTableModel(rs));
                   status_combo.addItem(m2.getValueAt(0,3).toString());
                   uptotal_txt.setText(m2.getValueAt(0,5).toString());
                   uporderDateChooser.setDate((java.util.Date) m2.getValueAt(0,4)); 
                   view_area.setText(null);
               } catch (SQLException ex) {
                   Logger.getLogger(OrderForm.class.getName()).log(Level.SEVERE, null, ex);
               }
         }
         else
             JOptionPane.showMessageDialog(null, "NOTHING SPECIFIED TO UPDATE");
    }//GEN-LAST:event_update_btnActionPerformed

    private void uptotal_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uptotal_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uptotal_txtActionPerformed

    private void oid_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oid_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_oid_txtActionPerformed

    private void supplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_supplierActionPerformed

    private void total_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_total_txtActionPerformed

    private void searchpro_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchpro_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchpro_txtActionPerformed

    private void supplierInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_supplierInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_supplierInputMethodTextChanged

    private void del_pro_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_del_pro_btnActionPerformed

        // TODO add your handling code here:
       if(!upproduct_table.getSelectionModel().isSelectionEmpty()){
       int op = JOptionPane.showConfirmDialog(null, "ARE YOU SURE YOU WANT TO DELETE ORDERED PRODUCT?", "DELETE", JOptionPane.YES_NO_OPTION);
        if(op==0){
        try{       
            String sql3 = "DELETE FROM order_product WHERE pid = ?";
            pat = con.prepareStatement(sql3);
            int i = upproduct_table.getSelectedRow();
            pat.setString(1,upproduct_table.getValueAt(1,0).toString());
            pat.executeUpdate();
           
           String sql2 ="SELECT p.pid,p.name,p.category,p.amount FROM order_product op Left Outer Join product p ON op.pid = p.pid WHERE op.oid = ?";
           pat = con.prepareStatement(sql2);
           pat.setString(1, order_table.getValueAt(0,0).toString());
           rs=pat.executeQuery();                  
           upproduct_table.setModel(DbUtils.resultSetToTableModel(rs));
           total1();
            
        }
        catch(HeadlessException | SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        }
       }
       else
           JOptionPane.showMessageDialog(null, "SELECT A PRODUCT TO DELETE.");
    }//GEN-LAST:event_del_pro_btnActionPerformed

    private void add_pro_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_pro_btnActionPerformed
        // TODO add your handling code here:
        if(!product_table.getSelectionModel().isSelectionEmpty()){
        try{
         String sql1 = "INSERT INTO order_product" + "(oid,pid,quantity)" + "VALUES (?,?,?)";
           pat = con.prepareStatement(sql1);         
           int x = product_table.getSelectedRow();
           pat.setString(1,order_table.getValueAt(0, 0).toString());
           pat.setString(2,product_table.getValueAt(x,0).toString());
           pat.setString(3,quantity_spinner.getValue().toString());
           pat.executeUpdate();
           
           String sql2 ="SELECT p.pid,p.name,p.category,p.amount FROM order_product op Left Outer Join product p ON op.pid = p.pid WHERE op.oid = ?";
           pat = con.prepareStatement(sql2);
           pat.setString(1, order_table.getValueAt(0,0).toString());
           rs=pat.executeQuery();                  
           upproduct_table.setModel(DbUtils.resultSetToTableModel(rs));
           total1();
        }catch(UnsupportedOperationException | SQLException ex){
           JOptionPane.showMessageDialog(null,ex);
       }
          }
       else
           JOptionPane.showMessageDialog(null, "SELECT A PRODUCT TO ADD.");
    }//GEN-LAST:event_add_pro_btnActionPerformed

    private void opennavi_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opennavi_btnActionPerformed
        // TODO add your handling code here:
        navi_panel.setVisible(true);
        gohome_btn.setVisible(true);
        closenavi_btn.setVisible(true);
        goproduct_btn.setVisible(true);
        goorder_btn.setVisible(true);
        gobilling_btn.setVisible(true);
        signout_btn.setVisible(true);
        opennavi_btn.setVisible(false);
        makeorder_table.setEnabled(false);
        makeorder_table.setVisible(false);
        label20.setVisible(false);
        label13.setVisible(false);
        label8.setVisible(false);
        label10.setVisible(false);
    }//GEN-LAST:event_opennavi_btnActionPerformed

    private void gohome_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gohome_btnActionPerformed
        // TODO add your handling code here:
        int op = JOptionPane.showConfirmDialog(null, "ARE YOU SURE YOU WANT TO LEAVE THIS PAGE?", "CHANGE TO HOME PAGE", JOptionPane.YES_NO_OPTION);
        if(op==0){
            PhamacistLogin pl = new PhamacistLogin();
            pl.setVisible(true);
            this.setVisible(false);}
    }//GEN-LAST:event_gohome_btnActionPerformed

    private void closenavi_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closenavi_btnActionPerformed
        // TODO add your handling code here:
        navi_panel.setVisible(false);
        delete_btn.setVisible(false);
        gohome_btn.setVisible(false);
        goproduct_btn.setVisible(false);
        goorder_btn.setVisible(false);
        del_pro_btn.setVisible(false);
        addprod_btn.setVisible(false);
        opennavi_btn.setVisible(true);
        label6.setVisible(true);
        product_table.setEnabled(true);
        product_table.setVisible(true);
        label13.setVisible(true);
        label7.setVisible(true);
        label10.setVisible(true);
    }//GEN-LAST:event_closenavi_btnActionPerformed

    private void goproduct_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goproduct_btnActionPerformed
        // TODO add your handling code here:
        int op = JOptionPane.showConfirmDialog(null," ARE YOU SURE YOU WANT TO LEAVE THIS PAGE?", "CHANGE TO ORDER PAGE", JOptionPane.YES_NO_OPTION);
        if(op==0){
            ProductForm pl = new ProductForm();
            pl.setVisible(true);
            this.setVisible(false);}
    }//GEN-LAST:event_goproduct_btnActionPerformed

    private void goorder_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goorder_btnActionPerformed
        // TODO add your handling code here:
        int op = JOptionPane.showConfirmDialog(null, "YOU ARE ALREADY IN ORDER PAGE. DO YOU WANT TO RESET THE PAGE?", "PAGE RESET", JOptionPane.YES_NO_OPTION);
        if(op==0){
            OrderForm ol = new OrderForm();
            ol.setVisible(true);
            this.setVisible(false);}
    }//GEN-LAST:event_goorder_btnActionPerformed

    private void gobilling_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gobilling_btnActionPerformed
        // TODO add your handling code here:
        int op = JOptionPane.showConfirmDialog(null, "ARE YOU SURE YOU WANT TO LEAVE THIS PAGE?", "CHANGE TO BILLING PAGE", JOptionPane.YES_NO_OPTION);
        if(op==0){
            BillingForm bl = new BillingForm();
            bl.setVisible(true);
            this.setVisible(false);}
    }//GEN-LAST:event_gobilling_btnActionPerformed

    private void signout_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signout_btnActionPerformed
        // TODO add your handling code here:
        int op = JOptionPane.showConfirmDialog(null, "ARE YOU SURE YOU WANT TO SIGN OUT?", "SIGN OUT", JOptionPane.YES_NO_OPTION);
        if(op==0){
            LoginForm l1 = new LoginForm();
            l1.setVisible(true);
            this.setVisible(false);}
    }//GEN-LAST:event_signout_btnActionPerformed

    private void total_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_total_txtKeyTyped
       char in = evt.getKeyChar();
        System.out.println(in);
        if(Character.isLetter(in)){
            evt.consume();
            JOptionPane.showMessageDialog(this, "Total should be numeric value");

        } 
    }//GEN-LAST:event_total_txtKeyTyped

    private void uptotal_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uptotal_txtKeyTyped
        char in = evt.getKeyChar();
        System.out.println(in);
        if(Character.isLetter(in)){
            evt.consume();
            JOptionPane.showMessageDialog(this, "Total should be numeric value");

        } 
    }//GEN-LAST:event_uptotal_txtKeyTyped

    private void supplier1_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplier1_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supplier1_comboActionPerformed
    
    public void loadcombo(){
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/happysmile","root","");
           String sql = "SELECT name FROM supplier";
           pat = con.prepareStatement(sql);
           rs = pat.executeQuery();
            while(rs.next()){
                supplier.addItem(rs.getString(1));
                supplier1_combo.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(OrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new OrderForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_pro_btn;
    private javax.swing.JButton addorder_btn;
    private javax.swing.JButton addprod_btn;
    private javax.swing.JButton allorder_btn;
    private javax.swing.JButton cancelupdate_btn;
    private javax.swing.JButton clearprod_btn;
    private javax.swing.JButton closenavi_btn;
    private javax.swing.JButton del_pro_btn;
    private javax.swing.JButton delete_btn;
    private javax.swing.JButton gobilling_btn;
    private javax.swing.JButton gohome_btn;
    private javax.swing.JButton goorder_btn;
    private javax.swing.JButton goproduct_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSpinner jSpinner8;
    private java.awt.Label label10;
    private java.awt.Label label12;
    private java.awt.Label label13;
    private java.awt.Label label14;
    private java.awt.Label label15;
    private java.awt.Label label16;
    private java.awt.Label label17;
    private java.awt.Label label18;
    private java.awt.Label label19;
    private java.awt.Label label20;
    private java.awt.Label label21;
    private java.awt.Label label3;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Label label9;
    private javax.swing.JTable makeorder_table;
    private javax.swing.JPanel navi_panel;
    private javax.swing.JTextField oid_txt;
    private javax.swing.JButton opennavi_btn;
    private com.toedter.calendar.JDateChooser orderDateChooser;
    private javax.swing.JTable order_table;
    private javax.swing.JButton pending_btn;
    private javax.swing.JButton print_btn;
    private javax.swing.JTable product_table;
    private javax.swing.JSpinner quantity_spinner;
    private javax.swing.JButton reset_btn;
    private javax.swing.JButton saerch_oid_btn;
    private javax.swing.JButton search_btn;
    private javax.swing.JTextField search_oid_txt;
    private javax.swing.JTextField searchpro_txt;
    private javax.swing.JButton signout_btn;
    private javax.swing.JComboBox<String> status_combo;
    private javax.swing.JComboBox<String> supplier;
    private javax.swing.JComboBox<String> supplier1_combo;
    private javax.swing.JTextField total_txt;
    private javax.swing.JButton update1_btn;
    private javax.swing.JButton update_btn;
    private com.toedter.calendar.JDateChooser uporderDateChooser;
    private javax.swing.JTable upproduct_table;
    private javax.swing.JTextField uptotal_txt;
    private javax.swing.JTextArea view_area;
    private javax.swing.JButton view_btn;
    // End of variables declaration//GEN-END:variables
}
